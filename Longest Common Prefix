class Solution {
    public String longestCommonPrefix(String[] strs) {
        if(strs.length==0){
            return "";
        }
        int min=strs[0].length();
        Map<Character,Integer> map=new HashMap<Character,Integer>();
        String s="";
        char c='\0';
        for(int i=1;i<strs.length;i++){
            if(min>strs[i].length()){
                min=strs[i].length();
            }
        }
        for(int i=0;i<min;i++){
            for(int j=0;j<strs.length;j++){
                if(!map.containsKey(strs[j])){
                  map.put(strs[j].charAt(i),j);
                  c=strs[j].charAt(i);
                }
            }
            System.out.println(map+" "+map.size());
            if((s=="" && c==strs[0].charAt(0))){
              if(map.size()==1){
                s+=c;
                System.out.println(s);
              }
            }
            else if(s!="" && c!=strs[0].charAt(0)){
                if(map.size()==1){
                s+=c;
                System.out.println(s);
              }
            }
            else if(s!="" && c==strs[0].charAt(0)){
                if(map.size()==1){
                s+=c;
                System.out.println(s);
              }
            }
            else{
                 System.out.println(s);
                if(s=="" && c!=strs[0].charAt(0)){
                    break;
                }
            }
            map=new HashMap<Character,Integer>();
        }   
        return s.trim();
    }
}
